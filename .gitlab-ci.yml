---
include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'
  - project: 'security/container-scanning'
    file: '.ESnet-container-scan.yml'
  - component: $CI_SERVER_FQDN/ht/cicd-common/harbor-cve@v0.3.0
    inputs:
      harbor_host:    $HSITE
      harbor_user:    $HUSER_CVE
      harbor_token:   $HTOKEN_CVE
      harbor_project: $CI_PROJECT_NAMESPACE

stages:
  - build
  - test

package:
  stage: build
  image: wharf.es.net/dockerhub-proxy/library/docker:26.1
  services:
    - name: wharf.es.net/dockerhub-proxy/library/docker:26.1-dind
      alias: docker
  tags:
    - ht-docker
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    # example PUBLISH_TAG: wharf.es.net/ht/hightouch-swdev-docker:v13
    PUBLISH_TAG: $HSITE/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID-g$CI_COMMIT_SHORT_SHA

    # Target all x86_64 targets generically
    DPDK_PLATFORM: generic
    DPDK_CPU_INSTRUCTION_SET: generic
    ARCH_SUFFIX: -generic

    # Target Intel specifically
    #DPDK_PLATFORM: native
    #DPDK_CPU_INSTRUCTION_SET: cascadelake
    #ARCH_SUFFIX: -intel

    # Target AMD specifically
    #DPDK_PLATFORM: native
    #DPDK_CPU_INSTRUCTION_SET: znver2
    #ARCH_SUFFIX: -amd
  script:
    # Auth to external registry
    - docker login -u "$HUSER" -p "$HTOKEN" "$HSITE"

    # Build and push the image
    - |
      docker build --pull -t $PUBLISH_TAG$ARCH_SUFFIX$TAG_SUFFIX \
        --build-arg DPDK_PLATFORM=${DPDK_PLATFORM} \
        --build-arg DPDK_CPU_INSTRUCTION_SET=${DPDK_CPU_INSTRUCTION_SET} \
        .
    - docker push $PUBLISH_TAG$ARCH_SUFFIX$TAG_SUFFIX

    # Capture the full image URL
    - |
      cat <<_EOF > package.env
      SMARTNIC_DPDK_IMAGE_URI=$PUBLISH_TAG$ARCH_SUFFIX$TAG_SUFFIX
      _EOF
    - cat package.env
  timeout: 30m
  artifacts:
    reports:
      dotenv:
        package.env
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      variables:
        TAG_SUFFIX: -dev

pull_cve_allowlist:
  extends: .harbor_cve_allowlist

container_scanning:
  variables:
    CS_REGISTRY_USER: $HUSER_RO
    CS_REGISTRY_PASSWORD: $HTOKEN_RO
    CS_IMAGE: $SMARTNIC_DPDK_IMAGE_URI
  # use 'dependencies' here rather than 'needs' since the gitlab container scanning
  # include sets 'dependencies: []' which takes precedence over 'needs'
  dependencies:
    - pull_cve_allowlist
    - package
